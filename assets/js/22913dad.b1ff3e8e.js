"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[834],{8242:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>a,default:()=>d,frontMatter:()=>n,metadata:()=>c,toc:()=>l});var o=r(7462),i=(r(7294),r(3905));r(1839);const n={sidebar_label:"waitfor",title:"cli.prod.waitfor"},a=void 0,c={unversionedId:"reference/cli/prod/waitfor",id:"reference/cli/prod/waitfor",title:"cli.prod.waitfor",description:"wait\\for\\connection",source:"@site/docs/reference/cli/prod/waitfor.md",sourceDirName:"reference/cli/prod",slug:"/reference/cli/prod/waitfor",permalink:"/arkitekt/docs/reference/cli/prod/waitfor",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/cli/prod/waitfor.md",tags:[],version:"current",frontMatter:{sidebar_label:"waitfor",title:"cli.prod.waitfor"},sidebar:"tutorialSidebar",previous:{title:"run",permalink:"/arkitekt/docs/reference/cli/prod/run"},next:{title:"magic_bar",permalink:"/arkitekt/docs/reference/qt/magic_bar"}},l=[{value:"wait_for_connection",id:"wait_for_connection",children:[],level:4}],s={toc:l};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,o.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"wait_for_connection"},"wait","_","for","_","connection"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"async def wait_for_connection(modules: List[str])\n")),(0,i.kt)("p",null,"Wits for connection"),(0,i.kt)("p",null,"Import required Modules for this instance to run and tries to\nconnect to the wards."),(0,i.kt)("p",null,"TODO: The wards are not checked if alive at the same time\nat the end"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"modules")," ",(0,i.kt)("em",{parentName:"li"},"List","[str]")," - The imported modules")))}d.isMDXComponent=!0}}]);