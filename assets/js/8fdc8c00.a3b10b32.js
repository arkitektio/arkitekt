"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[310],{5008:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>p,default:()=>k,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));a(1839);const i={sidebar_label:"mikro",title:"apps.mikro"},p=void 0,o={unversionedId:"reference/apps/mikro",id:"reference/apps/mikro",title:"apps.mikro",description:"This modules provides the main app. It is responsible for setting up the connection to the mikro-server and",source:"@site/docs/reference/apps/mikro.md",sourceDirName:"reference/apps",slug:"/reference/apps/mikro",permalink:"/arkitekt/docs/reference/apps/mikro",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/apps/mikro.md",tags:[],version:"current",frontMatter:{sidebar_label:"mikro",title:"apps.mikro"},sidebar:"tutorialSidebar",previous:{title:"herre",permalink:"/arkitekt/docs/reference/apps/herre"},next:{title:"rekuest",permalink:"/arkitekt/docs/reference/apps/rekuest"}},s=[{value:"MikroApp Objects",id:"mikroapp-objects",children:[],level:2}],l={toc:s};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This modules provides the main app. It is responsible for setting up the connection to the mikro-server and\nhandling authentification and setting up the configuration. Mikro handles the creation of the datalayer and\nthe graphql client."),(0,r.kt)("p",null,"You can compose this app together with other apps to create a full fledged app. (Like combining with\narkitekt to enable to call functions that you define on the app)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),":"),(0,r.kt)("p",null,"  A simple app that takes it configuraiton from basic.fakts and connects to the mikro-server.\nYou can define all of the logic within the context manager"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from mikro.app import MikroApp\n\napp = MikroApp(fakts=Fakts(subapp=&quot;basic&quot;))\n\nwith app:\n# do stuff\n\n")),(0,r.kt)("p",null,"  Async Usage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from mikro.app import MikroApp\n\napp = MikroApp(fakts=Fakts(subapp=&quot;basic&quot;))\n\nasync with app:\n# do stuff\n\n")),(0,r.kt)("h2",{id:"mikroapp-objects"},"MikroApp Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class MikroApp(HerreApp)\n")),(0,r.kt)("p",null,"Mikro App"),(0,r.kt)("p",null,"It is responsible for setting up the connection to the mikro-server and\nhandling authentification and setting up the configuration. Mikro handles the creation of the datalayer and\nthe graphql client."),(0,r.kt)("p",null,"You can compose this app together with other apps to create a full fledged app. (Like combining with\narkitekt to enable to call functions that you define on the app). See the example in the docstring."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fakts")," ",(0,r.kt)("em",{parentName:"li"},"Fakts")," - The fakts instance to use."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"mikro")," ",(0,r.kt)("em",{parentName:"li"},"Mikro")," - The mikro instance to use."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"herre")," ",(0,r.kt)("em",{parentName:"li"},"Herre")," - The herre instance to use.")))}k.isMDXComponent=!0}}]);