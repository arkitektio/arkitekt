(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9671],{59881:function(t,e,i){"use strict";i.r(e),i.d(e,{frontMatter:function(){return l},contentTitle:function(){return k},metadata:function(){return d},toc:function(){return u},default:function(){return p}});var n=i(87462),r=i(63366),s=(i(67294),i(3905)),a=i(93456),o=["components"],l={sidebar_position:1,sidebar_label:"Introduction"},k="Quick Start",d={unversionedId:"intro",id:"intro",title:"Quick Start",description:"Let's discover Arkitekt in less than 5 minutes.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/arkitekt/docs/intro",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Introduction"},sidebar:"tutorialSidebar",next:{title:"Transport",permalink:"/arkitekt/docs/transport"}},u=[{value:"Inspiration",id:"inspiration",children:[{value:"Arkitekt vs Celery",id:"arkitekt-vs-celery",children:[],level:4}],level:3},{value:"Trust Issues",id:"trust-issues",children:[],level:3},{value:"Installation",id:"installation",children:[],level:3},{value:"Initilization",id:"initilization",children:[],level:2}],c={toc:u};function p(t){var e=t.components,i=(0,r.Z)(t,o);return(0,s.kt)("wrapper",(0,n.Z)({},c,i,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"quick-start"},"Quick Start"),(0,s.kt)("p",null,"Let's discover ",(0,s.kt)("strong",{parentName:"p"},"Arkitekt in less than 5 minutes"),"."),(0,s.kt)("h3",{id:"inspiration"},"Inspiration"),(0,s.kt)("p",null,"Arkitekt tries to help in the automation of complex analysis pipelines. It is designed for task\ndistribution amongst ",(0,s.kt)("strong",{parentName:"p"},"untrusted")," and ",(0,s.kt)("strong",{parentName:"p"},"unsteady")," workes. What do we mean by this?"),(0,s.kt)("h4",{id:"arkitekt-vs-celery"},"Arkitekt vs Celery"),(0,s.kt)("p",null,"Arkitekt takes heavy inspiration from RPC Frameworks like Celery but has a completely different approach.\nWhereas Celery tries to offload tasks on workers in the background of a server. Arkitekt tries to schedule\nwork on the clients conneted to said worker."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Celery"),":"),(0,s.kt)(a.Mermaid,{chart:"flowchart LR;\n    id0(Client)--\x3e|Request|id2(Server)\n    id1(Client2)--\x3e|Request|id2(Server)\n    id2(Server)--\x3e|Task|id6(Worker)\n    id2(Server)--\x3e|Task|id3(Worker)\n    id2(Server)--\x3e|Task|id4(Worker)\n    id2(Server)--\x3e|Task|id5(Worker)",mdxType:"Mermaid"}),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Arkitekt"),":"),(0,s.kt)(a.Mermaid,{chart:"flowchart LR;\n    id0(Client)--\x3e|Request|id10(Arkitekt)\n    id10(Arkitekt)--\x3e|Task|id0(Client)\n    id1(Client2)--\x3e|Request|id10(Arkitekt)\n    id10(Arkitekt)--\x3e|Task|id1(Client2)\n    id2(Client2)--\x3e|Request|id10(Arkitekt)\n    id10(Arkitekt)--\x3e|Task|id2(Client3)\n",mdxType:"Mermaid"}),(0,s.kt)("h3",{id:"trust-issues"},"Trust Issues"),(0,s.kt)("p",null,"With this sort of layout comes one essential problem.. ",(0,s.kt)("strong",{parentName:"p"},"Trust!")),(0,s.kt)("h3",{id:"installation"},"Installation"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"pip install rath\n")),(0,s.kt)("h2",{id:"initilization"},"Initilization"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'from rath.links.aiohttp import AioHttpLink\n\nlink = AioHttpLink(url="https://api.spacex.land/graphql/")\n\n\nrath = Rath(link=link)\n\nquery = """query TestQuery {\n  capsules {\n    id\n    missions {\n      flight\n    }\n  }\n}\n"""\n\nresult = rath.execute(query)\n')))}p.isMDXComponent=!0},11748:function(t,e,i){var n={"./locale":89234,"./locale.js":89234};function r(t){var e=s(t);return i(e)}function s(t){if(!i.o(n,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return n[t]}r.keys=function(){return Object.keys(n)},r.resolve=s,t.exports=r,r.id=11748}}]);