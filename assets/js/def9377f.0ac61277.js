"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[876],{6043:(e,t,i)=>{i.r(t),i.d(t,{contentTitle:()=>n,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var o=i(7462),r=(i(7294),i(3905)),a=i(1839);const s={sidebar_position:2,sidebar_label:"First Reservation"},n="First Reservation no provision active app",c={unversionedId:"protocol/reserve/active_app/provided_before/no_reservation",id:"protocol/reserve/active_app/provided_before/no_reservation",title:"First Reservation no provision active app",description:"Scenario",source:"@site/docs/protocol/reserve/active_app/provided_before/no_reservation.md",sourceDirName:"protocol/reserve/active_app/provided_before",slug:"/protocol/reserve/active_app/provided_before/no_reservation",permalink:"/arkitekt/docs/protocol/reserve/active_app/provided_before/no_reservation",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/protocol/reserve/active_app/provided_before/no_reservation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"First Reservation"},sidebar:"tutorialSidebar",previous:{title:"Renewed Reservation",permalink:"/arkitekt/docs/protocol/reserve/active_app/not_provided_before/reservation"},next:{title:"Renewed Reservation",permalink:"/arkitekt/docs/protocol/reserve/active_app/provided_before/reservation"}},p=[{value:"Scenario",id:"scenario",children:[],level:3},{value:"Checklist",id:"checklist",children:[{value:"Scenario I (First Reservation (already active provision))",id:"scenario-i-first-reservation-already-active-provision",children:[],level:4}],level:3}],v={toc:p};function d(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,o.Z)({},v,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"first-reservation-no-provision-active-app"},"First Reservation no provision active app"),(0,r.kt)("h3",{id:"scenario"},"Scenario"),(0,r.kt)("p",null,"In this scenario you or somebody else has already caused arkitekt to\ncreate a provision of a specific node. Now you want to reserve that provision\nwith a specific set of parameters."),(0,r.kt)("h3",{id:"checklist"},"Checklist"),(0,r.kt)("ul",{className:"contains-task-list"},(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Reserved before"),(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Provided before"),(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Active App")),(0,r.kt)("h4",{id:"scenario-i-first-reservation-already-active-provision"},"Scenario I (First Reservation (already active provision))"),(0,r.kt)(a.G,{chart:"sequenceDiagram\n    autonumber\n    participant Postman\n    participant Postbox\n    participant Waiter\n    participant Agent\n    Postman->>Postbox: Reservation\n    Postbox->>Postbox: Check if active\n    Note right of Postbox: False\n    Postbox->>Postman: Reservation Pending\n    Postbox->>Waiter: Reserve Provision\n    Waiter->>Waiter: Check if Reservations viable\n    Note right of Postbox: True\n    Waiter->>Postbox: Reserve Done\n    Postbox->>Postman: Reservation Active",mdxType:"Mermaid"}))}d.isMDXComponent=!0}}]);