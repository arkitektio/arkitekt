"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6901],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),f=p(n),d=a,g=f["".concat(c,".").concat(d)]||f[d]||u[d]||o;return n?r.createElement(g,s(s({ref:t},l),{},{components:n})):r.createElement(g,s({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},86658:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return f}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),s=["components"],i={sidebar_label:"base",title:"agents.transport.base"},c=void 0,p={unversionedId:"reference/agents/transport/base",id:"reference/agents/transport/base",title:"agents.transport.base",description:"AgentTransport Objects",source:"@site/docs/reference/agents/transport/base.md",sourceDirName:"reference/agents/transport",slug:"/reference/agents/transport/base",permalink:"/rath/docs/reference/agents/transport/base",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/agents/transport/base.md",tags:[],version:"current",frontMatter:{sidebar_label:"base",title:"agents.transport.base"},sidebar:"tutorialSidebar",previous:{title:"stateful",permalink:"/rath/docs/reference/agents/stateful"},next:{title:"errors",permalink:"/rath/docs/reference/agents/transport/errors"}},l=[{value:"AgentTransport Objects",id:"agenttransport-objects",children:[],level:2}],u={toc:l};function f(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"agenttransport-objects"},"AgentTransport Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class AgentTransport()\n")),(0,o.kt)("p",null,"Agent Transport"),(0,o.kt)("p",null,"A Transport is a means of communicating with an Agent. It is responsible for sending\nand receiving messages from the backend. It needs to implement the following methods:"),(0,o.kt)("p",null,"list_provision: Getting the list of active provisions from the backend. (depends on the backend)\nlist_assignation: Getting the list of active assignations from the backend. (depends on the backend)"),(0,o.kt)("p",null,"change_assignation: Changing the status of an assignation. (depends on the backend)\nchange_provision: Changing the status of an provision. (depends on the backend)"),(0,o.kt)("p",null,"broadcast: Configuring the callbacks for the transport on new assignation, unassignation provision and unprovison."),(0,o.kt)("p",null,"if it is a stateful connection it can also implement the following methods:"),(0,o.kt)("p",null,"aconnect\nadisconnect"))}f.isMDXComponent=!0}}]);