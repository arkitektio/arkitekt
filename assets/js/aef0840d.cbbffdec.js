(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4429],{43050:function(e,t,o){"use strict";o.r(t),o.d(t,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return v},toc:function(){return u},default:function(){return l}});var i=o(87462),r=o(63366),n=(o(67294),o(3905)),a=o(93456),s=["components"],c={sidebar_position:3,sidebar_label:"First Reservation (unactive provision)"},p="First Reservation of unactive provision",v={unversionedId:"protocol/reserve/unactive_provision",id:"protocol/reserve/unactive_provision",title:"First Reservation of unactive provision",description:"Scenario",source:"@site/docs/protocol/reserve/unactive_provision.md",sourceDirName:"protocol/reserve",slug:"/protocol/reserve/unactive_provision",permalink:"/arkitekt/docs/protocol/reserve/unactive_provision",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/protocol/reserve/unactive_provision.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"First Reservation (unactive provision)"},sidebar:"tutorialSidebar",previous:{title:"First Reservation (no provision)",permalink:"/arkitekt/docs/protocol/reserve/no_provision"},next:{title:"First Reservation of active provision",permalink:"/arkitekt/docs/protocol/reserve/unactive_app/active_provision"}},u=[{value:"Scenario",id:"scenario",children:[],level:3}],d={toc:u};function l(e){var t=e.components,o=(0,r.Z)(e,s);return(0,n.kt)("wrapper",(0,i.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"first-reservation-of-unactive-provision"},"First Reservation of unactive provision"),(0,n.kt)("h3",{id:"scenario"},"Scenario"),(0,n.kt)("p",null,"In this scenario you or somebody else has already caused arkitekt to\ncreate a provision of a specific node. Now you want to reserve that provision\nwith a specific set of parameters."),(0,n.kt)(a.Mermaid,{chart:"sequenceDiagram\n    autonumber\n    participant Postman\n    participant Postbox\n    participant Waiter\n    participant Agent\n    Postman->>Postbox: Reservation\n    Postbox->>Postbox: Check if active\n    Note right of Postbox: False\n    Postbox->>Postman: Reservation Pending",mdxType:"Mermaid"}),(0,n.kt)("p",null,"Later after Agent connects"),(0,n.kt)(a.Mermaid,{chart:"sequenceDiagram\n    autonumber\n    participant Postman\n    participant Postbox\n    participant Waiter\n    participant Agent\n    Waiter->>Agent: Provisions\n    Agent->>Waiter: Provide Done\n    Waiter->>Waiter: Check if active\n    Note right of Postbox: True\n    Waiter->>Postbox: Reserve Done\n    Postbox->>Postman: Reservation Done",mdxType:"Mermaid"}))}l.isMDXComponent=!0},11748:function(e,t,o){var i={"./locale":89234,"./locale.js":89234};function r(e){var t=n(e);return o(t)}function n(e){if(!o.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}r.keys=function(){return Object.keys(i)},r.resolve=n,e.exports=r,r.id=11748}}]);