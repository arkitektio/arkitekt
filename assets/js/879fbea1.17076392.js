(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6937],{98286:function(t,n,s){"use strict";s.r(n),s.d(n,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var o=s(87462),r=s(63366),a=(s(67294),s(3905)),e=s(93456),c=["components"],i={sidebar_position:1,sidebar_label:"Transport"},p=void 0,l={unversionedId:"transport",id:"transport",title:"transport",description:"",source:"@site/docs/transport.md",sourceDirName:".",slug:"/transport",permalink:"/arkitekt/docs/transport",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/transport.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Transport"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/arkitekt/docs/intro"},next:{title:"Compose",permalink:"/arkitekt/docs/links/compose"}},u=[],m={toc:u};function d(t){var n=t.components,s=(0,r.Z)(t,c);return(0,a.kt)("wrapper",(0,o.Z)({},m,s,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(e.Mermaid,{chart:"classDiagram\n    class Transport {\n        abstract\n    }\n    class WebsocketTransport {\n        uses websockets to\n        connect to arkitekt\n    }\n    class MockTransport {\n        mimics for testing\n    }\n\n    WebsocketTransport --|> Transport\n    MockTransport --|> Transport\n    class Postman {\n        interacts with transport\n    }\n    Transport o-- Postman : calls\n    Postman <|-- StatefulPostman\n    Postman <|-- UnstatefulPostman\n    StatefulPostman: keeps local copy of res and ass\n    UnstatefulPostman: no local copy",mdxType:"Mermaid"}),(0,a.kt)(e.Mermaid,{chart:"classDiagram\n    class Transport {\n        abstract\n    }\n    class WebsocketTransport {\n        uses websockets to\n        connect to arkitekt\n    }\n    class MockTransport {\n        mimics for testing\n    }\n\n    WebsocketTransport --|> Transport\n    MockTransport --|> Transport\n    class Postman {\n        interacts with transport\n    }\n    Transport o-- Postman : calls\n    Postman <|-- StatefulPostman\n    Postman <|-- UnstatefulPostman\n    StatefulPostman: keeps local copy of res and ass\n    UnstatefulPostman: no local copy",mdxType:"Mermaid"}))}d.isMDXComponent=!0},11748:function(t,n,s){var o={"./locale":89234,"./locale.js":89234};function r(t){var n=a(t);return s(n)}function a(t){if(!s.o(o,t)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return o[t]}r.keys=function(){return Object.keys(o)},r.resolve=a,t.exports=r,r.id=11748}}]);