"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[429],{3050:(e,t,o)=>{o.r(t),o.d(t,{contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var i=o(7462),r=(o(7294),o(3905)),n=o(1839);const a={sidebar_position:3,sidebar_label:"First Reservation (unactive provision)"},s="First Reservation of unactive provision",c={unversionedId:"protocol/reserve/unactive_provision",id:"protocol/reserve/unactive_provision",title:"First Reservation of unactive provision",description:"Scenario",source:"@site/docs/protocol/reserve/unactive_provision.md",sourceDirName:"protocol/reserve",slug:"/protocol/reserve/unactive_provision",permalink:"/arkitekt/docs/protocol/reserve/unactive_provision",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/protocol/reserve/unactive_provision.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"First Reservation (unactive provision)"},sidebar:"tutorialSidebar",previous:{title:"First Reservation (no provision)",permalink:"/arkitekt/docs/protocol/reserve/no_provision"},next:{title:"First Reservation of active provision",permalink:"/arkitekt/docs/protocol/reserve/unactive_app/active_provision"}},p=[{value:"Scenario",id:"scenario",children:[],level:3}],v={toc:p};function u(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,i.Z)({},v,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"first-reservation-of-unactive-provision"},"First Reservation of unactive provision"),(0,r.kt)("h3",{id:"scenario"},"Scenario"),(0,r.kt)("p",null,"In this scenario you or somebody else has already caused arkitekt to\ncreate a provision of a specific node. Now you want to reserve that provision\nwith a specific set of parameters."),(0,r.kt)(n.G,{chart:"sequenceDiagram\n    autonumber\n    participant Postman\n    participant Postbox\n    participant Waiter\n    participant Agent\n    Postman->>Postbox: Reservation\n    Postbox->>Postbox: Check if active\n    Note right of Postbox: False\n    Postbox->>Postman: Reservation Pending",mdxType:"Mermaid"}),(0,r.kt)("p",null,"Later after Agent connects"),(0,r.kt)(n.G,{chart:"sequenceDiagram\n    autonumber\n    participant Postman\n    participant Postbox\n    participant Waiter\n    participant Agent\n    Waiter->>Agent: Provisions\n    Agent->>Waiter: Provide Done\n    Waiter->>Waiter: Check if active\n    Note right of Postbox: True\n    Waiter->>Postbox: Reserve Done\n    Postbox->>Postman: Reservation Done",mdxType:"Mermaid"}))}u.isMDXComponent=!0}}]);