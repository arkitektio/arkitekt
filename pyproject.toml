[tool.poetry]
name = "arkitekt"
version = "0.4.126"
description = "client for the arkitekt platform"
authors = ["jhnnsrs <jhnnsrs@gmail.com>"]
license = "CC BY-NC 3.0"
packages = [{ include = "arkitekt" }]

[tool.poetry.dependencies]
python = "^3.8, <=3.12"
herre = ">=0.3.22"
fakts = ">=0.3.25"
rekuest = ">=0.1.51"
mikro = ">=0.3.81"
unlok = ">=0.1.15"
fluss = ">=0.1.56"
rich-click = { version = "^1.6.1", optional = true }
watchfiles = { version = "^0.18.1", optional = true }
turms = { version = ">=0.3.1a0", python = "^3.9", optional = true }
reaktion = { version = ">=0.1.35", python = "^3.9", optional = true }


[tool.poetry.extras]
cli = ["rich-click", "watchfiles", "turms"]
scheduler = ["reaktion"]
all = ["cli", "scheduler"]

[tool.mypy]
exclude = ["venv/"]
ignore_missing_imports = true


[tool.ruff]
extend-select = ["ANN", "D1"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

[tool.poetry.group.dev.dependencies]
testcontainers = "3.7.0"
autoflake = "^1.7.7"
pytest = "^7.2.0"
pytest-asyncio = "^0.20.2"
aiohttp = "^3.8.3"
websockets = "^10.4"
black = "^23.1.0"
pytest-cov = "^4.0.0"
pytest-aiohttp = "^1.0.4"
ruff = "^0.0.254"
mypy = "^1.0.1"


[tool.poetry.scripts]
arkitekt = "arkitekt.cli.main:cli"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
qt_api = "pyqt5"
markers = [
    "integration: marks tests that require a running server",
    "qt: marks tests that require a running qt application",
]


[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = ["arkitekt"]

[tool.pydoc-markdown.renderer]
type = "docusaurus"
docs_base_path = "website/docs"
